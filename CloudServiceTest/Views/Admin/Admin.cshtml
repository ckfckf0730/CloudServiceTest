@model CloudServiceTest.Models.AdminViewModel

<h1>Welcome back, Administrator.</h1>

<table>
	<thead>
		<tr>
			<th>Username</th>
			<th>Action</th>
			<th>Action2</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var user in Model.Users)
		{
			<tr>
				<td>@user.UserName</td>
				<td><button class="AddRoleButton" data-id="@user.Id" data-name="@user.UserName">Add Role</button></td>
				<td><button class="DeleteRoleButton" data-id="@user.Id" data-name="@user.UserName">Delete Role</button></td>
			</tr>
		}
	</tbody>
</table>

<!-- modalOverlay add -->
<div id="modalAddRole" class="modal-overlay">
	<div class="modal-content">
		<h4 id="SelectedUserName"></h4>
		<p id="ExistingRoles"></p>
		<h4>Please select added role</h4>
		<div id="AddRoleArea"></div>

		<button id="closeAddModalButton" class="close-button">Close</button>
	</div>
</div>

<!-- modalOverlay delete -->
<div id="modalDeleteRole" class="modal-overlay">
	<div class="modal-content">
		<h4 id="SelectedUserName"></h4>
		<p id="ExistingRoles2"></p>
		<h4>Delete role</h4>
		<div id="DeleteRoleArea"></div>

		<button id="closeDeleteModalButton" class="close-button">Close</button>
	</div>
</div>

<script>
	var addRoleButtons = document.querySelectorAll(".AddRoleButton");
	var deleteRoleButtons = document.querySelectorAll(".DeleteRoleButton");
	var closeAddModalButton = document.getElementById("closeAddModalButton");
	var closeDeleteModalButton = document.getElementById("closeDeleteModalButton");
	var modalAddRole = document.getElementById("modalAddRole");
	var modalDeleteRole = document.getElementById("modalDeleteRole");
	var SelectedUserName = document.getElementById("SelectedUserName");
	var ExistingRoles = document.getElementById("ExistingRoles");
	var ExistingRoles2 = document.getElementById("ExistingRoles2");
	var AddRoleArea = document.getElementById("AddRoleArea");
	var DeleteRoleArea = document.getElementById("DeleteRoleArea");

	addRoleButtons.forEach(function (button) {
		button.addEventListener("click", function () {
			var userId = button.getAttribute("data-id");
			var userName = button.getAttribute("data-name");
			SelectedUserName.textContent = userName;
			getUserRoles(userId, ExistingRoles);
			getAllRoles(userName, AddRoleArea);

			modalAddRole.style.display = "block";
		});
	});

	deleteRoleButtons.forEach(function (button) {
		button.addEventListener("click", function () {
			var userId = button.getAttribute("data-id");
			var userName = button.getAttribute("data-name");
			SelectedUserName.textContent = userName;
			getUserRoles(userId, ExistingRoles2);
			deleteUserRolesButton(userId, userName, DeleteRoleArea);

			modalDeleteRole.style.display = "block";
		});
	});

	// close addRoleModal
	function closeModal() {
		AddRoleArea.innerHTML = '';
	}

	closeAddModalButton.addEventListener("click", function () {
		modalAddRole.style.display = "none";
		closeModal();
	});

	modalAddRole.addEventListener("click", function (event) {
		if (event.target === modalAddRole) {
			modalAddRole.style.display = "none";
			closeModal();
		}
	});

	// close deleteRoleModal
	function closeModal2() {
		DeleteRoleArea.innerHTML = '';
	}

	closeDeleteModalButton.addEventListener("click", function () {
		modalDeleteRole.style.display = "none";
		closeModal2();
	});

	modalDeleteRole.addEventListener("click", function (event) {
		if (event.target === modalDeleteRole) {
			modalDeleteRole.style.display = "none";
			closeModal2();
		}
	});

	function getUserRoles(userId, rolesElement) {
		fetch(`/Admin/GetUserRoles?userId=${userId}`)
			.then(response => {
				if (!response.ok) {
					throw new Error('Network response was not ok');
				}
				return response.json();
			})
			.then(data => {
				rolesElement.textContent = "ExistingRoles:";
				data.forEach(function (item) {
					rolesElement.textContent += (" " + item)
				});
			})
			.catch(error => {
				console.error('There has been a problem with your fetch operation:', error);
			});
	}

	function getAllRoles(userName, element) {
		fetch(`/Admin/GetAllRoles`)
			.then(response => {
				if (!response.ok) {
					throw new Error('Network response was not ok');
				}
				return response.json();
			})
			.then(data => {
				data.forEach(function (item) {
					var button = document.createElement("button");
					button.innerHTML = item.name;
					button.addEventListener("click", function () {
						fetch(`/Admin/AddUserRole?userName=${userName}&roleName=${item.name}`);
						closeModal();
						modalAddRole.style.display = "none";
					});

					element.appendChild(button);
				});
			}
			)
			.catch(error => {
				console.error('There has been a problem with your fetch operation:', error);
			});
	}

	function deleteUserRolesButton(userId, userName, element) {
		fetch(`/Admin/GetUserRoles?userId=${userId}`)
			.then(response => {
				if (!response.ok) {
					throw new Error('Network response was not ok');
				}
				return response.json();
			})
			.then(data => {
				data.forEach(function (item) {
					 var button = document.createElement("button");
					 button.innerHTML = item;
					button.style.backgroundColor = "red";
					button.style.color = "white";
					button.addEventListener("click", function(event) {
						fetch(`/Admin/DeleteUserRole?userName=${userName}&roleName=${item}`);
						closeModal2();
						modalDeleteRole.style.display = "none";
					});

					element.appendChild(button);
				});
			})
			.catch(error => {
				console.error('There has been a problem with your fetch operation:', error);
			});
	}

</script>